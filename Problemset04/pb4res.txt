-- ProblemSet<No.4>, November <23> <2017> 
 -- Submission by <subashree.asokkumar@accenture.com>  

/*1.Find the names of all students who are friends with someone named Gabriel. (1 point possible)*/

name
Jordan
Cassandra
Andrew
Alexis
Jessica



/*2.For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. (1 point possible)*/


name1	grade1	likesname	likesgrade2
John	12	Haley		10

/*3.For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order. (1 point possible)*/

 name 		grade 	name 		grade
Cassandra 	9 	Gabriel 	9
Jessica 	11 	Kyle 		12

/*4.Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade. (1 point possible)

name	grade
Jordan	9
Tiffany	9
Logan	12

/*5.For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades. (1 point possible)*/

id	name		grade	likesid	likesname	likesgrade
1641	Brittany	10	1468	Kris		10
1247	Alexis		11	1468	Kris		10
1316	Austin		11	1304	Jordan		12
1025	John		12	1101	Haley		10

/*6.Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade. (1 point possible)*/

name 		grade
Jordan 		9
Brittany 	10
Haley 		10
Kris 		10
Gabriel 	11
John 		12
Logan 		12

/*7.For each student A who likes a student B where the two are not friends, find if they have a friend C in common (who can introduce them!). For all such trios, return the name and grade of A, B, and C. (1 point possible)*/

name 	grade 	name 		grade 	name 		grade
Andrew 	10 	Cassandra 	9 	Gabriel 	9
Austin 	11 	Jordan 		12 	Andrew 		10
Austin 	11 	Jordan 	1	2 	Kyle 		12

/*8.Find the difference between the number of students in the school and the number of different first names. (1 point possible)*/

difference
2

/*9.Find the name and grade of all students who are liked by more than one other student. (1 point possible)*/

name		grade
Cassandra	9
Kris		10

/*10.For every situation where student A likes student B, but student B likes a different student C, return the names and grades of A, B, and C. (1 point possible)*/

name1	grade1	name2		grade2	name		grade
Andrew	10	Cassandra	9	Gabriel		9
Gabriel	11	Alexis		11	Kris		10
/*11.Find those students for whom all of their friends are in different grades from themselves. Return the students' names and grades.(1 point possible)*/

name 	grade
Austin 	11

/*12.What is the average number of friends per student? (Your result should be just one number.) (1 point possible)*/

avg_no_offrnds_perstud
2.5


/*13.Find the number of students who are either friends with Cassandra or are friends of friends of Cassandra. Do not count Cassandra, even though technically she is a friend of a friend.*/

count(id2)
7



/*14.Find the name and grade of the student(s) with the greatest number of friends. (1 point possible)*/

name 	grade
Andrew 	10
Alexis 	11



